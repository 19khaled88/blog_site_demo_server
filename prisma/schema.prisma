// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model Post {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  short_name String
  content    String
  avatar     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  published  Boolean  @default(false)
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cate_id    String   @db.ObjectId
  category   Category @relation(fields: [cate_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("posts")
}

model Category {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  userId        String   @db.ObjectId
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subcategories Subcategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  posts         Post[]

  @@map("categories")
}

model Subcategory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("subcategories")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  password  String
  role      ROLE       @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  profile   Profile?
  Category  Category[]
  banners   Banner[]

  @@map("users")
}

model Profile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  country   String
  location  String
  age       String
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("profiles")
}

model Banner {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  title    String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  imageUrl String 

  @@map("banners")
}

enum ROLE {
  USER
  ADMIN
}
